{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ColorPicker Color select custom template variable in MODX Revolution. Requirements MODX Revolution 2.5+ PHP v5.3+ Features With this MODX Revolution custom template variable a color select input could be used to select a color in a MODX resource.","title":"Description"},{"location":"#colorpicker","text":"Color select custom template variable in MODX Revolution.","title":"ColorPicker"},{"location":"#requirements","text":"MODX Revolution 2.5+ PHP v5.3+","title":"Requirements"},{"location":"#features","text":"With this MODX Revolution custom template variable a color select input could be used to select a color in a MODX resource.","title":"Features"},{"location":"contributors/","text":"The ColorPicker project was started in 2011 by Benjamin Vauchel and is maintained and developed further since 2017 by Thomas Jakobi . Many thanks to all who contributed, whether by creating pull requests, submitting bug reports, or donating.","title":"Contributors"},{"location":"installation/","text":"Install from MODX Extras Search for ColorPicker in the Package Manager of your MODX installation and install it in there. Manual installation If you can't access the MODX Extras Repository in your MODX installation, you can manually install ColorPicker. Download the transport package from MODX Extras (or one of the pre built transport packages in _packages ) Upload the zip file to your MODX installation's core/packages folder or upload it manually in the MODX Package Manager. In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button. ColorPicker should now show up in the list of available packages. Click the corresponding 'Install' button and follow instructions to complete the installation. Build it from source To build and install the package from source you could use Git Package Management . The GitHub repository of ColorPicker contains a config.json to build that package locally. Use this option, if you want to debug ColorPicker and/or contribute bugfixes and enhancements.","title":"Installation"},{"location":"installation/#install-from-modx-extras","text":"Search for ColorPicker in the Package Manager of your MODX installation and install it in there.","title":"Install from MODX Extras"},{"location":"installation/#manual-installation","text":"If you can't access the MODX Extras Repository in your MODX installation, you can manually install ColorPicker. Download the transport package from MODX Extras (or one of the pre built transport packages in _packages ) Upload the zip file to your MODX installation's core/packages folder or upload it manually in the MODX Package Manager. In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button. ColorPicker should now show up in the list of available packages. Click the corresponding 'Install' button and follow instructions to complete the installation.","title":"Manual installation"},{"location":"installation/#build-it-from-source","text":"To build and install the package from source you could use Git Package Management . The GitHub repository of ColorPicker contains a config.json to build that package locally. Use this option, if you want to debug ColorPicker and/or contribute bugfixes and enhancements.","title":"Build it from source"},{"location":"usage/","text":"Output Options The following output options could be set in template variable settings if the output type is set to ColorPicker . Another possibility is to assign the settings as properties to the MODX tag 1 . Setting Description Default Format CSS color format Hexadecimal Output Output type 2 . CSS The colorpicker template tariable could be formatted in template or template chunks with the following tag syntax: [[*tvname? &color_format=`hex` &color_output=`css`]] \u21a9 Examples of CSS output: #FFFFFF or rgb(255,255,255) or hsl(1,1,1) . Examples of JSON output: {\"FF\",\"FF\",\"FF\"} or {255,255,255} or {1,1,1} . \u21a9","title":"Usage"},{"location":"usage/#output-options","text":"The following output options could be set in template variable settings if the output type is set to ColorPicker . Another possibility is to assign the settings as properties to the MODX tag 1 . Setting Description Default Format CSS color format Hexadecimal Output Output type 2 . CSS The colorpicker template tariable could be formatted in template or template chunks with the following tag syntax: [[*tvname? &color_format=`hex` &color_output=`css`]] \u21a9 Examples of CSS output: #FFFFFF or rgb(255,255,255) or hsl(1,1,1) . Examples of JSON output: {\"FF\",\"FF\",\"FF\"} or {255,255,255} or {1,1,1} . \u21a9","title":"Output Options"}]}